VDD -- PIN 17 -- 3.3V
GND -- PIN 9 --GND
SCL -- PIN 5 -- GPIO3
SDA -- PIN 3 -- GPIO2



update rasberry pi with cmd
sudo apt-get update
sudo apt-get upgrade

the enable rasberry pi 12c interface to control 12c device, for that write cmd
sudo raspi-config
here, a configuration panel will open, goto interface option then select 12c

then install the dependencies for adafruit
sudo apt-get install build-essential python-dev python-smbus git

next,clone the adafruit git folder for library by running
git clone https://github.com/adafruit/Adafruit_Python_ADS1x15.git

then change into cloned files directory by:
cd Adafruit_Python_ADSIx15/
pws
ls
sudo python setup.py install

run below cmd to test
python simpletest.py

install matplotlib 2 visualize
sudo apt-get install python-matplotlib

then write the below code


import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
import Adafruit_ADS1x15
# Create an ADS1115 ADC (16-bit) instance.
adc = Adafruit_ADS1x15.ADS1115()
GAIN = 1
val = [ ]
# Start continuous ADC conversions on channel 0 using the previous gain value.
adc.start_adc(0, gain=GAIN)
print('Reading ADS1x15 channel 0')
fig, ax = plt.subplots()
ax.set_ylim(-5000,5000)
ax.set_title('Oscilloscope')
ax.grid(True)
ax.set_ylabel('ADC outputs')
line, = ax.plot([], 'ro-', label='Channel 0')
ax.legend(loc='lower right')
def update(cnt):
 # Read the last ADC conversion value and print it out.
 value = adc.get_last_result()
 print('Channel 0: {0}'.format(value))
 # Set new data to line
 line.set_data(list(range(len(val))), val)
 ax.relim()
 ax.autoscale_view()
 #Store values for later
 val.append(int(value))
 if(cnt>50):
val.pop(0)
ani = FuncAnimation(fig, update, interval=500)
plt.show()


THEN RUN THE CODE USING:
python oscilloscope.py



